<html>
<head>
<title>VB Entwicklungsumgebung</title>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<link rel="stylesheet" href="stylesheet.css" type="text/css">
<SCRIPT ID=clientEventHandlersJS LANGUAGE=javascript>
<!--

function window_onload() {
 parent.set_Titel("IDE von Visual Basic");
 parent.set_Status("loading ready");

 return true;
}

//-->
</SCRIPT>
</head>

<body bgcolor="#FFFFFF" text="#000000" LANGUAGE=javascript onload="return window_onload()">
<p class="standard">Hier sehen Sie die Entwicklungsumgebung von Visual Basic:<br>
  <img src="vb_entwicklungsumgebung.gif" width="618" height="421"> </p>
<p class="standard">Auf den ersten Blick sieht alles etwas voll aus, aber bei 
  genauerer Betrachtung ist es dann doch nicht so kompliziert. Am oberen Rand 
  wird das Men&uuml; von Visual Basic angezeigt, in dem Sie die das aktuelle Projekt 
  verwalten, optimieren etc. Das Datei-Men&uuml; (hier kann &uuml;brigens hinterher 
  auch eine EXE-Datei erstellt werden) und das Bearbeiten-Men&uuml; sollten klar 
  sein. Im Ansicht-Men&uuml; k&ouml;nnen Sie ausw&auml;hlen, was genau angezeigt 
  werden soll. Mehr dazu aber sp&auml;ter. In dem Men&uuml; Projekt k&ouml;nnen 
  Sie spezielle Elemente zu dem Projekt hinzuf&uuml;gen, wie z. B. weiterer Code, 
  weitere Formen und auch Klassen, Steuerelemente, etc. Sie k&ouml;nnen hier auch 
  externe Steuerelemente (OCX-Dateien) und ActiveX-DLLs einf&uuml;gen. Die weiteren 
  Men&uuml; sind jetzt erstmal unwichtig, da sie bei normalem Gebrauch sowieso 
  fast nie benutzt werden, nur das Men&uuml; Extras ist noch wichtig. Hier k&ouml;nnen 
  Sie die Optionen von Visual Basic einstellen und Men&uuml;s f&uuml;r Fenster 
  in ihrem Programm bearbeiten.<br>
  Die wichtigsten Funktionen sind jetzt noch mal als Symbole darunter dargstellt. 
  Mit dem Play-Button k&ouml;nnen Sie hier das Programm starten, mit dem Pause-Button 
  dann pausieren und mit dem Stopp-Button beenden.</p>
<p class="standard">Kommen wir zur eigentlichen Ansicht. Sie k&ouml;nnen in den 
  Optionen w&auml;hlen zwischen einer MDI-Ansicht und einer SDI-Ansicht. Die SDI-Ansicht 
  stammt von den fr&uuml;heren Versionen von Visual Basic. Hier wird jedes Element 
  in einem eigenen Fenster angezeigt. Zu sehen ist hier aber die von mir bevorzugte 
  und auch standardm&auml;&szlig;ig aktivierte MDI-Ansicht, bei der alle Elemente 
  in einem gro&szlig;en Fenster angezeigt werden.<br>
  Die Elemente besitzen wie fast alle neueren Windows-Anwendungen au&szlig;erdem 
  noch eine Andock-Funktion, mit der Sie die Elemente an den R&auml;ndern ausrichten 
  k&ouml;nnen und an bestimmte andere Elemente &quot;andocken&quot; k&ouml;nnen.<br>
  Hier zu sehen sind jetzt die wichtigsten Elemente. Links in dem Element befinden 
  sich alle Steuerelemente, die zu Verf&uuml;gung steheh. Wenn Sie gerade ein 
  Fenster bearbeiten (in Visual Basic wird so ein Fenster Form genannt, was ich 
  auch in meinem weiteren Text tun werde), k&ouml;nnen Sie hier ein Steuerelement 
  ausw&auml;hlen und es dann auf der Form platzieren. Ganz rechts ist das Element, 
  in dem alle Dateien, die zu dem aktuellen Projekt geh&ouml;ren, aufgelistet 
  werden. Im Bild habe ich gerade ein komplett neues Projekt erstellt, daher ist 
  dort nur ein Eintrag und zwar eine Form, die normalerweise immer bei einem neuen 
  Projekt standardm&auml;&szlig;ig miterstellt wird (stammt wohl auch noch aus 
  &auml;lteren VB-Zeiten, ist normalerweise aber auch erw&uuml;nscht). Bei richtig 
  professionelle Projekten ist diese Liste aber dann richtig gef&uuml;llt. Links 
  neben diesem Element befinden sich 2 weitere Elemente - eins oben und eins unten. 
  Im oberen k&ouml;nnen Sie die Eigenschaften von dem aktuellen Objekt, dass Sie 
  gerade bearbeiten (in diesem Fall eine Form), festlegen. Direkt darunter wird 
  noch eine kleine Beschreibung f&uuml;r die Eigenschaft angezeigt. Dies geh&ouml;rt 
  aber noch zu diesem Element, kann aber auch in der Gr&ouml;&szlig;e frei verstellt 
  werden. Darunter (in diesem Bild leider nicht so deutlich zu erkennen) ist ein 
  Computer-Bildschirm abgebildet. Die gestrichelten Linien stehen dabei f&uuml;r 
  die Aufl&ouml;sungen 640x480, 800x600 und 1024x768 und zeigen den entsprechenden 
  Abschnitt an, der bei der Aufl&ouml;sung zu sehen ist. Au&szlig;erdem sehen 
  Sie auf diesem Bildschirm die Formen Ihres Projekts. So k&ouml;nnen Sie schnell 
  und leicht sehen, ob Ihre Form auch noch bei einer Aufl&ouml;sung mit 640x480 
  vollst&auml;ndig zu sehen ist. In der Mitte befinden sich jetzt der eigentliche 
  Code und die Formen von Ihrem Projekt, die Sie dort bearbeiten k&ouml;nnen.</p>
<p class="standard">Kommen wir zum Code-Fenster, in dem Sie den eigentlichen Visual 
  Basic Code eingeben:<br>
  <img src="vb_code.gif" width="496" height="334"></p>
<p class="standard">Sie sehen oben 2 ComboBoxen. Links k&ouml;nnen Sie ausw&auml;hlen, 
  von welchem Objekt Sie ein bestimmtes Ereignis bearbeiten wollen. Rechts k&ouml;nnen 
  Sie dann das Ereignis ausw&auml;hlen. Visual Basic unterst&uuml;tzt hier die 
  wichtigsten und am h&auml;ufig benutzten Ereignisse der entsprechenden Objekte. 
  Falls Sie noch weitere Ereignisse brauchen, m&uuml;ssen Sie diese entweden versuchen 
  zu simulieren oder Sie m&uuml;ssen auf entsprechende API-Funktionen zur&uuml;ckgreifen, 
  um direkt die Windows-Messages abzufangen, die diese Ereignisse in den Programmen 
  dann aufrufen (das war jetzt eine Kurze Beschreibung der Funktionsweise von 
  Windows). Das mit den API-Funktionen geh&ouml;rt aber zur professionellen Programmierung 
  und ist jetzt erstmal viel zu kompliziert. Wenn Sie jetzt hier ein Ereignis 
  ausw&auml;hlen, erstellt Visual Basic automatisch die entsprechende Prozedur 
  mit den passenden Parametern. Zu sehen ist hier das Load-Ereignis der Form, 
  bei dem nat&uuml;rlich keine Parameter &uuml;bergeben werden. Zwischen diesen 
  beiden Zeilen k&ouml;nnen Sie jetzt den Code eingeben. L&ouml;schen Sie auf 
  keinen Fall die Zeilen, da Visual Basic den Code dann nicht mehr richtig zuordnen 
  kann.</p>
<p class="standard">Sie k&ouml;nnen &uuml;brigens auch weitere Prozeduren und 
  auch Funktionen definieren, indem Sie einfach diese 2 Zeilen selbst noch einmal 
  hinschreiben, nur nat&uuml;rlich mit einem anderen Namen. Der Unterschied zwischen 
  Prozeduren und Funktionen ist, dass Funktionen einen Wert zur&uuml;ckgeben und 
  Prozeduren nur eine bestimmte Aktion ausf&uuml;hren. Die Bezeichnung ist in 
  anderen Programmiersprachen &auml;hnlich, aber nicht immer vollkommen identisch. 
  Lassen Sie sich deswegen also nicht beirren, falls Sie eventuell etwas andere 
  Bezeichnungen kennen. In diesen Texten hier werde ich immer bei diesen Namen 
  bleiben.</p>
<p class="standard">So, Sie haben jetzt die Grund-Bedienungselemente von Visual 
  Basic kennengelernt. Im n&auml;chsten Kapitel werden Sie ihr erstes kleines 
  Visual Basic Programm programmieren.</p>
</body>
</html>
